%
% references.bib -- Bibliography file for the paper ifs
%
% (c) 2020 Autor, Hochschule Rapperswil
%

@online{ifs:chaos,
	title = {Chaosspiel},
	url = {https://de.wikipedia.org/wiki/Iteriertes_Funktionensystem#Chaosspiel},
	date = {20201-06-13},
	year = {2021},
	month = {6},
	day = {13}
}

@online{ifs:barnsleyfern,
	title = {Barnsley fern},
	url = {https://en.wikipedia.org/wiki/Barnsley_fern},
	date = {20201-06-13},
	year = {2021},
	month = {6},
	day = {13}
}
@book{ifs:fractal-geometry,
	title = {Fractal Geometry},
	author = {Kenneth Falconer},
	publisher = {John Wiley \& Sons},
	year = {1900},
	isbn = {0-471-92287-0},
}

@Inbook{ifs:Rousseau2012,
	author= {Rousseau, Christiane
	and Saint-Aubin, Yvan
	and Stern, Manfred},
	title={Bildkompression: Iterierte Funktionensysteme},
	bookTitle={Mathematik und Technologie},
	year={2012},
	publisher={Springer Berlin Heidelberg},
	address={Berlin, Heidelberg},
	pages={341--386},
	abstract={Dieses Kapitel kann in ein bis zwei Wochen Vorlesungen behandelt werden. Steht nur eine Woche zur Verfügung, dann können Sie kurz die Einführung behandeln (Abschnitt 11.1) und anschlie{\ss}end ausf{\"u}hrlich den Begriff des Attraktors eines iterierten Funktionensystems betrachten (Abschnitt 11.3), wobei Sie sich auf das Sierpi{\'{n}}ski- Dreieck (Beispiel 11.5) konzentrieren. Beweisen Sie den Satz {\"u}ber die Konstruktion von affinen Transformationen, die drei Punkte der Ebene auf drei Punkte der Ebene abbilden und diskutieren Sie die speziellen affinen Transformationen, die h{\"a}ufig bei iterierten Funktionensystemen verwendet werden (Abschnitt 11.2).},
	isbn={978-3-642-30092-9},
	doi={10.1007/978-3-642-30092-9_11},
	url={https://doi.org/10.1007/978-3-642-30092-9_11}
}

@article{ifs:pifs,
	title = {Applications of Partitioned Iterated Function Systems in Image and Video Compression},
	journal = {Journal of Visual Communication and Image Representation},
	volume = 7,
	number = {2},
	pages = {144-154},
	year = 1996,
	issn = {1047-3203},
	doi = {https://doi.org/10.1006/jvci.1996.0014},
	url = {https://www.sciencedirect.com/science/article/pii/S1047320396900140},
	author = {Guojun Lu and Toon Lin Yew},
	abstract = {Iterated function systems (IFS) have been used to compress image data. Because of difficulty in finding IFS in natural images, a technique based on partitioned IFS (PIFS) has been proposed for image compression. In this technique, an image to be compressed is divided into nonoverlapping blocks. For each block an affine transformation is found in the image. This set of affine transformations (called PIFS) corresponds to a unique image. In the simplest case, images are partitioned into fixed size blocks. In this paper, we investigate image and video compression techniques using variable block sizes based on the quadtree partition. One property of images generated using PIFS is scalability: they have fine detail in any scale. We exploit this property to reduce required compression time and improve compression performance. There are large amounts of temporal redundancy between fames of a video sequence. We describe a method to remove temporal redundancies effectively using a quadtree partitioning technique. We have implemented the above schemes to compress image and video sequences and will report our experimental results.}
}


